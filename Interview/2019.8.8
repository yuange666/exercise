1.说一说你对 JS 执行上下文栈和作用域链的理解？
    执行上下文栈又叫调用栈,具有后进先出的特点,用处存储js执行过程中创建的所有执行上下文。
首次运行js，将会创建一个全局执行上下文并push到当前栈的栈顶，每发生一次函数调用，就会创建一个函数执行上下文并push到当前栈的栈顶，
当栈顶的函数调用结束后，其对应的函数执行上下文就会从栈顶pop出，此时上下文的控制权移交到当前栈的下一个。
    从当前作用域开始向上一层地一层地寻找某个变量，一直到全局作用域都找不到就放弃,这样一层一层的关系就是作用域链
2.js在浏览器中的执行机制?
    js是一门单线程的语言，它执行的任务分为同步任务和异步任务，先依次执行完同步任务,然后执行异步任务，异步任务总体分为两类，宏任务和微任务。
宏任务(setTimeout,整个script,I/O)，微任务（promise）,微任务执行优先级高于宏任务，如此重复执行，形成事件循环(event loop);


